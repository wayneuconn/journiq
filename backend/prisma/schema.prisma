datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["relationJoins"]
}

generator erd {
  provider = "npx -y prisma-erd-generator"
  output   = "README.md"
}

// Define Enums
enum Role {
  ADMIN
  MEMBER
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id               Int             @id @default(autoincrement())
  username         String          @unique
  email            String          @unique
  password         String
  role             Role            @default(MEMBER)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  sentRequests     FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
  friends          Friend[]        @relation("UserFriends")
  addedBy          Friend[]        @relation("FriendsUser")
  groups           Group[]         @relation("UserGroups")
  userGroups       UserGroups[]
}

model Friend {
  id       Int  @id @default(autoincrement())
  userId   Int
  friendId Int
  user     User @relation("UserFriends", fields: [userId], references: [id])
  friend   User @relation("FriendsUser", fields: [friendId], references: [id])

  @@unique([userId, friendId])
}

model FriendRequest {
  id       Int                 @id @default(autoincrement())
  userId   Int
  friendId Int
  status   FriendRequestStatus @default(PENDING)
  user     User                @relation("SentRequests", fields: [userId], references: [id])
  friend   User                @relation("ReceivedRequests", fields: [friendId], references: [id])

  @@unique([userId, friendId])
}

model Group {
  id         Int          @id @default(autoincrement())
  name       String
  users      User[]       @relation("UserGroups")
  userGroups UserGroups[]
}

model UserGroups {
  userId  Int
  groupId Int
  user    User  @relation(fields: [userId], references: [id])
  group   Group @relation(fields: [groupId], references: [id])

  @@id([userId, groupId])
}
